Backport of:

From d168705e11526a4b487640c7cac5b53ee3646cbc Mon Sep 17 00:00:00 2001
From: Cesar Pereida <cesar.pereida@aalto.fi>
Date: Mon, 23 May 2016 12:45:25 +0300
Subject: [PATCH] Fix DSA, preserve BN_FLG_CONSTTIME

Operations in the DSA signing algorithm should run in constant time in
order to avoid side channel attacks. A flaw in the OpenSSL DSA
implementation means that a non-constant time codepath is followed for
certain operations. This has been demonstrated through a cache-timing
attack to be sufficient for an attacker to recover the private DSA key.

CVE-2016-2178

Reviewed-by: Richard Levitte <levitte@openssl.org>
Reviewed-by: Matt Caswell <matt@openssl.org>
(cherry picked from commit 621eaf49a289bfac26d4cbcdb7396e796784c534)
---
 crypto/dsa/dsa_ossl.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

Index: openssl-1.0.1f/crypto/dsa/dsa_ossl.c
===================================================================
--- openssl-1.0.1f.orig/crypto/dsa/dsa_ossl.c	2016-09-22 09:04:16.056322736 -0400
+++ openssl-1.0.1f/crypto/dsa/dsa_ossl.c	2016-09-22 09:05:04.792946673 -0400
@@ -241,10 +241,6 @@
 	do
 		if (!BN_rand_range(&k, dsa->q)) goto err;
 	while (BN_is_zero(&k));
-	if ((dsa->flags & DSA_FLAG_NO_EXP_CONSTTIME) == 0)
-		{
-		BN_set_flags(&k, BN_FLG_CONSTTIME);
-		}
 
 	if (dsa->flags & DSA_FLAG_CACHE_MONT_P)
 		{
@@ -273,11 +269,14 @@
 			}
 
 		K = &kq;
+
+		BN_set_flags(K, BN_FLG_CONSTTIME);
 		}
 	else
 		{
 		K = &k;
 		}
+
 	DSA_BN_MOD_EXP(goto err, dsa, r, dsa->g, K, dsa->p, ctx,
 			dsa->method_mont_p);
 	if (!BN_mod(r,r,dsa->q,ctx)) goto err;
