Backport of:

From 3681a4558c13198944e6f7f149c4be188e076e14 Mon Sep 17 00:00:00 2001
From: Matt Caswell <matt@openssl.org>
Date: Tue, 7 Jun 2016 09:12:51 +0100
Subject: [PATCH] More fix DSA, preserve BN_FLG_CONSTTIME

The previous "fix" still left "k" exposed to constant time problems in
the later BN_mod_inverse() call. Ensure both k and kq have the
BN_FLG_CONSTTIME flag set at the earliest opportunity after creation.

CVE-2016-2178

Reviewed-by: Rich Salz <rsalz@openssl.org>
(cherry picked from commit b7d0f2834e139a20560d64c73e2565e93715ce2b)
---
 crypto/dsa/dsa_ossl.c | 11 ++++++++---
 1 file changed, 8 insertions(+), 3 deletions(-)

Index: openssl-1.0.1f/crypto/dsa/dsa_ossl.c
===================================================================
--- openssl-1.0.1f.orig/crypto/dsa/dsa_ossl.c	2016-09-22 09:06:08.809762435 -0400
+++ openssl-1.0.1f/crypto/dsa/dsa_ossl.c	2016-09-22 09:07:27.510759765 -0400
@@ -242,6 +242,11 @@
 		if (!BN_rand_range(&k, dsa->q)) goto err;
 	while (BN_is_zero(&k));
 
+	if ((dsa->flags & DSA_FLAG_NO_EXP_CONSTTIME) == 0)
+		{
+		BN_set_flags(&k, BN_FLG_CONSTTIME);
+		}
+
 	if (dsa->flags & DSA_FLAG_CACHE_MONT_P)
 		{
 		if (!BN_MONT_CTX_set_locked(&dsa->method_mont_p,
@@ -256,6 +261,8 @@
 		{
 		if (!BN_copy(&kq, &k)) goto err;
 
+		BN_set_flags(&kq, BN_FLG_CONSTTIME);
+
 		/* We do not want timing information to leak the length of k,
 		 * so we compute g^k using an equivalent exponent of fixed length.
 		 *
@@ -269,8 +276,6 @@
 			}
 
 		K = &kq;
-
-		BN_set_flags(K, BN_FLG_CONSTTIME);
 		}
 	else
 		{
