Backport of:

From 22646a075e75991b4e8f5d67171e45a6aead5b48 Mon Sep 17 00:00:00 2001
From: Matt Caswell <matt@openssl.org>
Date: Wed, 21 Sep 2016 14:48:16 +0100
Subject: [PATCH] Don't allow too many consecutive warning alerts

Certain warning alerts are ignored if they are received. This can mean that
no progress will be made if one peer continually sends those warning alerts.
Implement a count so that we abort the connection if we receive too many.

Issue reported by Shi Lei.

Reviewed-by: Rich Salz <rsalz@openssl.org>
---
 ssl/d1_pkt.c   | 15 +++++++++++++++
 ssl/s3_pkt.c   | 15 +++++++++++++++
 ssl/ssl.h      |  1 +
 ssl/ssl_locl.h |  4 ++++
 4 files changed, 35 insertions(+)

Index: openssl-1.0.1f/ssl/d1_pkt.c
===================================================================
--- openssl-1.0.1f.orig/ssl/d1_pkt.c	2017-01-30 12:34:38.876598997 -0500
+++ openssl-1.0.1f/ssl/d1_pkt.c	2017-01-30 12:37:24.370762576 -0500
@@ -910,6 +910,13 @@
 		goto start;
 		}
 
+	/*
+	 * Reset the count of consecutive warning alerts if we've got a non-empty
+	 * record that isn't an alert.
+	 */
+	if (rr->type != SSL3_RT_ALERT && rr->length != 0)
+		s->cert->alert_count = 0;
+
 	/* we now have a packet which can be read and processed */
 
 	if (s->s3->change_cipher_spec /* set when we receive ChangeCipherSpec,
@@ -1179,6 +1186,14 @@
 		if (alert_level == 1) /* warning */
 			{
 			s->s3->warn_alert = alert_descr;
+
+			s->cert->alert_count++;
+			if (s->cert->alert_count == MAX_WARN_ALERT_COUNT) {
+				al = SSL_AD_UNEXPECTED_MESSAGE;
+				SSLerr(SSL_F_DTLS1_READ_BYTES, SSL_R_TOO_MANY_WARN_ALERTS);
+				goto f_err;
+			}
+
 			if (alert_descr == SSL_AD_CLOSE_NOTIFY)
 				{
 #ifndef OPENSSL_NO_SCTP
Index: openssl-1.0.1f/ssl/s3_pkt.c
===================================================================
--- openssl-1.0.1f.orig/ssl/s3_pkt.c	2017-01-30 12:34:38.876598997 -0500
+++ openssl-1.0.1f/ssl/s3_pkt.c	2017-01-30 12:38:42.263782297 -0500
@@ -1013,6 +1013,13 @@
 		if (ret <= 0) return(ret);
 		}
 
+	/*
+	 * Reset the count of consecutive warning alerts if we've got a non-empty
+	 * record that isn't an alert.
+	 */
+	if (rr->type != SSL3_RT_ALERT && rr->length != 0)
+		s->cert->alert_count = 0;
+
 	/* we now have a packet which can be read and processed */
 
 	if (s->s3->change_cipher_spec /* set when we receive ChangeCipherSpec,
@@ -1229,6 +1236,14 @@
 		if (alert_level == 1) /* warning */
 			{
 			s->s3->warn_alert = alert_descr;
+
+			s->cert->alert_count++;
+			if (s->cert->alert_count == MAX_WARN_ALERT_COUNT) {
+				al = SSL_AD_UNEXPECTED_MESSAGE;
+				SSLerr(SSL_F_SSL3_READ_BYTES, SSL_R_TOO_MANY_WARN_ALERTS);
+				goto f_err;
+			}
+
 			if (alert_descr == SSL_AD_CLOSE_NOTIFY)
 				{
 				s->shutdown |= SSL_RECEIVED_SHUTDOWN;
Index: openssl-1.0.1f/ssl/ssl.h
===================================================================
--- openssl-1.0.1f.orig/ssl/ssl.h	2017-01-30 12:34:38.876598997 -0500
+++ openssl-1.0.1f/ssl/ssl.h	2017-01-30 12:39:16.524230727 -0500
@@ -2548,6 +2548,7 @@
 #define SSL_R_TLS_INVALID_ECPOINTFORMAT_LIST		 157
 #define SSL_R_TLS_PEER_DID_NOT_RESPOND_WITH_CERTIFICATE_LIST 233
 #define SSL_R_TLS_RSA_ENCRYPTED_VALUE_LENGTH_IS_WRONG	 234
+#define SSL_R_TOO_MANY_WARN_ALERTS                       409
 #define SSL_R_TRIED_TO_USE_UNSUPPORTED_CIPHER		 235
 #define SSL_R_UNABLE_TO_DECODE_DH_CERTS			 236
 #define SSL_R_UNABLE_TO_DECODE_ECDH_CERTS		 313
Index: openssl-1.0.1f/ssl/ssl_locl.h
===================================================================
--- openssl-1.0.1f.orig/ssl/ssl_locl.h	2017-01-30 12:34:38.876598997 -0500
+++ openssl-1.0.1f/ssl/ssl_locl.h	2017-01-30 12:40:37.325288124 -0500
@@ -478,6 +478,8 @@
 #define NAMED_CURVE_TYPE           3
 #endif  /* OPENSSL_NO_EC */
 
+# define MAX_WARN_ALERT_COUNT    5
+
 typedef struct cert_pkey_st
 	{
 	X509 *x509;
@@ -517,6 +519,8 @@
 	CERT_PKEY pkeys[SSL_PKEY_NUM];
 
 	int references; /* >1 only if SSL_copy_session_id is used */
+	/* Count of the number of consecutive warning alerts received */
+	unsigned int alert_count;
 	} CERT;
 
 
